{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2
    ],
    "data": [
        "+ ",
        "  rename(country = company_location)",
        "> ",
        "# Convert country geometry to centroids",
        "> ",
        "world <- world %>%",
        "+ ",
        "  mutate(centroid = st_centroid(geometry)) %>%",
        "+ ",
        "  mutate(longitude = st_coordinates(centroid)[,1],",
        "+ ",
        "         latitude = st_coordinates(centroid)[,2])",
        "> ",
        "# Merge salary data with country map data",
        "> ",
        "map_data <- world %>%",
        "+ ",
        "  left_join(salary_by_country, by = c(\"iso_a2\" = \"country\"))",
        "> ",
        "# Remove missing values",
        "> ",
        "map_data <- map_data %>%",
        "+ ",
        "  filter(!is.na(longitude) & !is.na(latitude) & !is.na(avg_salary))",
        "> ",
        "# Plot",
        "> ",
        "ggplot(data = world) +",
        "+ ",
        "  geom_sf(fill = \"gray85\", color = \"white\") +  # Base world map",
        "+ ",
        "  geom_point(data = map_data, aes(x = longitude, y = latitude, ",
        "+ ",
        "                                  size = avg_salary, color = avg_salary), ",
        "+ ",
        "             alpha = 0.6) +  # Adjust transparency",
        "+ ",
        "  scale_size_continuous(range = c(2, 20), labels = dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  scale_color_viridis_c(option = \"magma\", direction = -1, labels = dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"💰 Data Science Salaries Around the World\",",
        "+ ",
        "    subtitle = \"Bubble Size = Average Salary | Color = Salary Level\",",
        "+ ",
        "    color = \"Avg Salary (USD)\",",
        "+ ",
        "    size = \"Salary (USD)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_void() +  # Remove gridlines & axis labels",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14, margin = margin(b = 10)),",
        "+ ",
        "    legend.position = \"bottom\"",
        "+ ",
        "  )",
        "> ",
        "# Plot",
        "> ",
        "ggplot(data = world) +",
        "+ ",
        "  geom_sf(fill = \"gray85\", color = \"white\") +  ",
        "+ ",
        "  geom_point(data = map_data, aes(x = longitude, y = latitude, ",
        "+ ",
        "                                  size = avg_salary, color = avg_salary), ",
        "+ ",
        "             alpha = 0.5) +  ",
        "+ ",
        "  scale_size_continuous(range = c(3, 15), labels = scales::dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  scale_color_viridis_c(option = \"plasma\", direction = -1, labels = scales::dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"💰 Data Science Salaries Around the World\",",
        "+ ",
        "    subtitle = \"Bubble Size = Average Salary | Color = Salary Level\",",
        "+ ",
        "    color = \"Avg Salary (USD)\",",
        "+ ",
        "    size = \"Salary (USD)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14, margin = margin(b = 10)),",
        "+ ",
        "    legend.position = \"bottom\"",
        "+ ",
        "  )",
        "> ",
        "world <- ne_countries(scale = \"medium\", returnclass = \"sf\")",
        "> ",
        "# Merge salary data with world map",
        "> ",
        "map_data <- left_join(world, salary_data, by = \"iso_a3\")  ",
        "Error: object 'salary_data' not found\n",
        "> ",
        "install.packages(\"countrycode\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/countrycode_1.6.0.tgz'\nContent type 'application/x-gzip' length 1265668 bytes (1.2 MB)\n==================================================\ndownloaded 1.2 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/rr/1my9dxj92ql5lbtcf0nwfz6r0000gn/T//Rtmpkd5S5Q/downloaded_packages\n",
        "> ",
        "library(countrycode)",
        "> ",
        "# Merge salary data with world map",
        "> ",
        "map_data <- left_join(world, salary_data, by = \"iso_a3\")  ",
        "Error: object 'salary_data' not found\n",
        "> ",
        "# Merge salary data with world map",
        "> ",
        "salary_data$iso_a3 <- countrycode(salary_data$country, \"country.name\", \"iso3c\")",
        "Error: object 'salary_data' not found\n",
        "> ",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(sf)",
        "> ",
        "library(rnaturalearth)",
        "> ",
        "library(rnaturalearthdata)",
        "> ",
        "library(scales)  ",
        "> ",
        "library(dplyr) ",
        "> ",
        "install.packages(\"viridis\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(viridis) ",
        "> ",
        "install.packages(\"countrycode\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(countrycode)",
        "> ",
        "> ",
        "install.packages(\"rnaturalearth\", repos = \"http://cran.us.r-project.org\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"rnaturalearthdata\", repos = \"http://cran.us.r-project.org\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "> ",
        "# Read the dataset",
        "> ",
        "df <- read.csv(\"ds_salaries.csv\")",
        "> ",
        "> ",
        "# Aggregate data: Compute average salary per job title",
        "> ",
        "avg_salary_by_job <- df %>%",
        "+ ",
        "  group_by(job_title) %>%",
        "+ ",
        "  summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%",
        "+ ",
        "  arrange(desc(avg_salary))  # Sort by highest salary",
        "> ",
        "> ",
        "# Select top 10 highest-paying roles",
        "> ",
        "top_10_jobs <- avg_salary_by_job[1:10, ]",
        "> ",
        "> ",
        "# Plot improved bar chart",
        "> ",
        "ggplot(top_10_jobs, aes(x = reorder(job_title, avg_salary), y = avg_salary, fill = avg_salary)) +",
        "+ ",
        "  geom_bar(stat = \"identity\", show.legend = FALSE) +  # Hide legend (optional)",
        "+ ",
        "  ",
        "+ ",
        "  # Adding Data Labels",
        "+ ",
        "  geom_text(aes(label = scales::dollar(avg_salary, scale = 1e-3, suffix = \"K\")), ",
        "+ ",
        "            hjust = -0.2, size = 5, fontface = \"bold\") +",
        "+ ",
        "  ",
        "+ ",
        "  coord_flip() +  # Flip for better readability",
        "+ ",
        "  ",
        "+ ",
        "  # Format salary axis in 'K' (thousands)",
        "+ ",
        "  scale_y_continuous(labels = dollar_format(scale = 1e-3, suffix = \"K\")) +",
        "+ ",
        "  ",
        "+ ",
        "  # Titles & Labels",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Top 10 Highest Paying Data Science Roles\",",
        "+ ",
        "    subtitle = \"Based on Average Salary (USD) Across Job Titles\",",
        "+ ",
        "    x = \"Job Title\",",
        "+ ",
        "    y = \"Average Salary (USD)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\"",
        "+ ",
        "  ) +",
        "+ ",
        "  ",
        "+ ",
        "  # Theme & Text Formatting",
        "+ ",
        "  theme_minimal(base_size = 14) +  ",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\"),",
        "+ ",
        "    axis.text = element_text(size = 12)",
        "+ ",
        "  ) +",
        "+ ",
        "  ",
        "+ ",
        "  # Custom Gradient Fill",
        "+ ",
        "  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\")",
        "> ",
        "> ",
        "df <- df %>%",
        "+ ",
        "  mutate(start_date = as.Date(paste0(work_year, \"-01-01\")))",
        "> ",
        "> ",
        "# Aggregate Data: Count job postings and calculate average salary per year",
        "> ",
        "jobs_salaries_per_year <- df %>%",
        "+ ",
        "  group_by(start_date) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    job_count = n(),  ",
        "+ ",
        "    avg_salary = mean(salary_in_usd, na.rm = TRUE)",
        "+ ",
        "  )",
        "> ",
        "> ",
        "# Plot Line Graph",
        "> ",
        "ggplot(jobs_salaries_per_year, aes(x = start_date)) +",
        "+ ",
        "  ",
        "+ ",
        "  # Job count line with markers",
        "+ ",
        "  geom_line(aes(y = job_count, color = \"Job Count\"), size = 1.5, linetype = \"solid\") +",
        "+ ",
        "  geom_point(aes(y = job_count, color = \"Job Count\"), size = 4, shape = 16) +",
        "+ ",
        "  ",
        "+ ",
        "  # Average salary line with markers",
        "+ ",
        "  geom_line(aes(y = avg_salary / 500, color = \"Avg Salary (Scaled)\"), size = 1.5, linetype = \"dashed\") +",
        "+ ",
        "  geom_point(aes(y = avg_salary / 500, color = \"Avg Salary (Scaled)\"), size = 4, shape = 17) +",
        "+ ",
        "  ",
        "+ ",
        "  # Titles & Labels",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Trends in Data Science Job Postings & Salaries Over Time\",",
        "+ ",
        "    subtitle = \"Job Openings vs. Average Salary (Scaled) Per Year\",",
        "+ ",
        "    x = \"Year\",",
        "+ ",
        "    y = \"Count / Salary (Scaled)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\",",
        "+ ",
        "    color = \"Metrics\"",
        "+ ",
        "  ) +",
        "+ ",
        "  ",
        "+ ",
        "  # Customizing Theme",
        "+ ",
        "  theme_minimal(base_size = 16) +  ",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 20),",
        "+ ",
        "    plot.subtitle = element_text(size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\"),",
        "+ ",
        "    axis.text = element_text(size = 12),",
        "+ ",
        "    legend.position = c(0.15, 0.85),  # Move legend inside plot",
        "+ ",
        "    legend.background = element_rect(fill = \"white\", color = \"black\")",
        "+ ",
        "  ) +",
        "+ ",
        "  ",
        "+ ",
        "  # Add Vertical Line at 2020 (Example)  ",
        "+ ",
        "  geom_vline(xintercept = as.Date(\"2020-01-01\"), linetype = \"dashed\", color = \"gray\") +",
        "+ ",
        "  ",
        "+ ",
        "  # Add Horizontal Line at 0 (Just in Case)",
        "+ ",
        "  geom_hline(yintercept = 0, linetype = \"solid\", color = \"black\")",
        "Warning messages:\n1: \u001B[38;5;232mUsing `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n\u001B[36mℹ\u001B[38;5;232m Please use `linewidth` instead.\n\u001B[90mThis warning is displayed once every 8 hours.\u001B[38;5;232m\n\u001B[90mCall `lifecycle::last_lifecycle_warnings()` to see where this warning was\u001B[38;5;232m\n\u001B[90mgenerated.\u001B[38;5;232m\u001B[39m \n2: \u001B[38;5;232mA numeric `legend.position` argument in `theme()` was deprecated in ggplot2 3.5.0.\n\u001B[36mℹ\u001B[38;5;232m Please use the `legend.position.inside` argument of `theme()",
        "` instead.\n\u001B[90mThis warning is displayed once every 8 hours.\u001B[38;5;232m\n\u001B[90mCall `lifecycle::last_lifecycle_warnings()` to see where this warning was\u001B[38;5;232m\n\u001B[90mgenerated.\u001B[38;5;232m\u001B[39m \n",
        "> ",
        "> ",
        "# Categorize jobs as Remote or On-Site",
        "> ",
        "df$work_type <- ifelse(df$remote_ratio > 50, \"Remote\", \"On-Site\")",
        "> ",
        "> ",
        "# Create the histogram",
        "> ",
        "ggplot(df, aes(x = salary_in_usd, fill = work_type)) +",
        "+ ",
        "  geom_histogram(alpha = 0.6, position = \"identity\", bins = 30) +  ",
        "+ ",
        "  geom_density(aes(y = ..count.. * 20), alpha = 0.3) +  ",
        "+ ",
        "  scale_fill_manual(values = c(\"Remote\" = \"darkblue\", \"On-Site\" = \"skyblue\")) +  ",
        "+ ",
        "  scale_x_continuous(labels = dollar_format()) +  ",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Salary Distribution: Remote vs. On-Site Data Science Jobs\",",
        "+ ",
        "    subtitle = \"Does Remote Work Pay More?\",",
        "+ ",
        "    x = \"Salary (USD)\",",
        "+ ",
        "    y = \"Count\",",
        "+ ",
        "    fill = \"Work Type\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal(base_size = 14) +  ",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\"),",
        "+ ",
        "    axis.text = element_text(size = 12),",
        "+ ",
        "    legend.position = \"top\"",
        "+ ",
        "  ) ",
        "Warning message:\n\u001B[38;5;232mThe dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\n\u001B[36mℹ\u001B[38;5;232m Please use `after_stat(count)` instead.\n\u001B[90mThis warning is displayed once every 8 hours.\u001B[38;5;232m\n\u001B[90mCall `lifecycle::last_lifecycle_warnings()` to see where this warning was\u001B[38;5;232m\n\u001B[90mgenerated.\u001B[38;5;232m\u001B[39m \n",
        "> ",
        "> ",
        "employment_labels <- c(\"FT\" = \"Full-Time\", \"CT\" = \"Contract\", ",
        "+ ",
        "                       \"FL\" = \"Freelance\", \"PT\" = \"Part-Time\")",
        "> ",
        "> ",
        "ggplot(df, aes(x = employment_type, y = salary_in_usd, fill = employment_type)) +",
        "+ ",
        "  geom_boxplot(alpha = 0.7, outlier.shape = 21, outlier.color = \"red\", outlier.fill = \"red\") +  ",
        "+ ",
        "  stat_summary(fun = mean, geom = \"point\", shape = 8, size = 3, color = \"black\") +  ",
        "+ ",
        "  scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Salary Distribution by Employment Type\",",
        "+ ",
        "    subtitle = \"Which Employment Type Has the Most Stable Income?\",",
        "+ ",
        "    x = \"Employment Type\",",
        "+ ",
        "    y = \"Salary (USD)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\",",
        "+ ",
        "    fill = \"Employment Type\"  # Legend Title",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_x_discrete(labels = employment_labels) +  # Replace short forms with full forms on x-axis",
        "+ ",
        "  theme_minimal(base_size = 14) +  ",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\"),",
        "+ ",
        "    axis.text = element_text(size = 12),",
        "+ ",
        "    legend.position = c(0.85, 0.85),  # Moves legend to top right",
        "+ ",
        "    legend.background = element_rect(fill = \"white\", color = \"black\", linewidth = 0.5), # Add border to legend",
        "+ ",
        "    legend.key = element_rect(fill = \"white\")",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_manual(",
        "+ ",
        "    values = c(\"FL\" = \"#E69F00\", \"CT\" = \"#56B4E9\", ",
        "+ ",
        "               \"PT\" = \"#009E73\", \"FT\" = \"#D55E00\"),",
        "+ ",
        "    labels = employment_labels  # Apply custom legend labels",
        "+ ",
        "  )  ",
        "> ",
        "> ",
        "# Load world map data",
        "> ",
        "world <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")",
        "> ",
        "> ",
        "salary_by_country <- df %>%",
        "+ ",
        "  group_by(company_location) %>%",
        "+ ",
        "  summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%",
        "+ ",
        "  rename(country = company_location)",
        "> ",
        "> ",
        "world <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")",
        "> ",
        "> ",
        "# Aggregate salary data by country",
        "> ",
        "salary_by_country <- df %>%",
        "+ ",
        "  group_by(company_location) %>%",
        "+ ",
        "  summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%",
        "+ ",
        "  rename(country = company_location)",
        "> ",
        "> ",
        "# Convert country geometry to centroids",
        "> ",
        "world <- world %>%",
        "+ ",
        "  mutate(centroid = st_centroid(geometry)) %>%",
        "+ ",
        "  mutate(longitude = st_coordinates(centroid)[,1],",
        "+ ",
        "         latitude = st_coordinates(centroid)[,2])",
        "> ",
        "> ",
        "# Merge salary data with country map data",
        "> ",
        "map_data <- world %>%",
        "+ ",
        "  left_join(salary_by_country, by = c(\"iso_a2\" = \"country\"))",
        "> ",
        "> ",
        "# Remove missing values",
        "> ",
        "map_data <- map_data %>%",
        "+ ",
        "  filter(!is.na(longitude) & !is.na(latitude) & !is.na(avg_salary))",
        "> ",
        "> ",
        "# Plot",
        "> ",
        "ggplot(data = world) +",
        "+ ",
        "  geom_sf(fill = \"gray85\", color = \"white\") +  ",
        "+ ",
        "  geom_point(data = map_data, aes(x = longitude, y = latitude, ",
        "+ ",
        "                                  size = avg_salary, color = avg_salary), ",
        "+ ",
        "             alpha = 0.5) +  ",
        "+ ",
        "  scale_size_continuous(range = c(3, 15), labels = scales::dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  scale_color_viridis_c(option = \"plasma\", direction = -1, labels = scales::dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"💰 Data Science Salaries Around the World\",",
        "+ ",
        "    subtitle = \"Bubble Size = Average Salary | Color = Salary Level\",",
        "+ ",
        "    color = \"Avg Salary (USD)\",",
        "+ ",
        "    size = \"Salary (USD)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14, margin = margin(b = 10)),",
        "+ ",
        "    legend.position = \"bottom\"",
        "+ ",
        "  )",
        "> ",
        "install.packages(\"countrycode\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/countrycode_1.6.0.tgz'\nContent type 'application/x-gzip' length 1265668 bytes (1.2 MB)\n==================================================\ndownloaded 1.2 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/rr/1my9dxj92ql5lbtcf0nwfz6r0000gn/T//Rtmpkd5S5Q/downloaded_packages\n",
        "> ",
        "install.packages(\"rnaturalearth\", repos = \"http://cran.us.r-project.org\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"rnaturalearthdata\", repos = \"http://cran.us.r-project.org\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"rnaturalearth\", repos = \"http://cran.us.r-project.org\")",
        "trying URL 'http://cran.us.r-project.org/bin/macosx/big-sur-arm64/contrib/4.4/rnaturalearth_1.0.1.tgz'\nContent type 'application/x-gzip' length 1697133 bytes (1.6 MB)\n==================================================\ndownloaded 1.6 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/rr/1my9dxj92ql5lbtcf0nwfz6r0000gn/T//Rtmpkd5S5Q/downloaded_packages\n",
        "> ",
        "install.packages(\"rnaturalearthdata\", repos = \"http://cran.us.r-project.org\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"viridis\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/viridis_0.6.5.tgz'\nContent type 'application/x-gzip' length 3016921 bytes (2.9 MB)\n==================================================\ndownloaded 2.9 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/rr/1my9dxj92ql5lbtcf0nwfz6r0000gn/T//Rtmpkd5S5Q/downloaded_packages\n",
        "> ",
        "install.packages(\"rnaturalearthdata\", repos = \"http://cran.us.r-project.org\")",
        "trying URL 'http://cran.us.r-project.org/bin/macosx/big-sur-arm64/contrib/4.4/rnaturalearthdata_1.0.0.tgz'\nContent type 'application/x-gzip' length 3334923 bytes (3.2 MB)\n==================================================\ndownloaded 3.2 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/rr/1my9dxj92ql5lbtcf0nwfz6r0000gn/T//Rtmpkd5S5Q/downloaded_packages\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(sf)",
        "> ",
        "library(rnaturalearth)",
        "> ",
        "library(rnaturalearthdata)",
        "> ",
        "library(scales)  ",
        "> ",
        "library(dplyr) ",
        "> ",
        "library(viridis) ",
        "> ",
        "library(countrycode)",
        "> ",
        "> ",
        "install.packages(\"rnaturalearth\", repos = \"http://cran.us.r-project.org\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"rnaturalearthdata\", repos = \"http://cran.us.r-project.org\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "> ",
        "# Read the dataset",
        "> ",
        "df <- read.csv(\"ds_salaries.csv\")",
        "> ",
        "> ",
        "# Aggregate data: Compute average salary per job title",
        "> ",
        "avg_salary_by_job <- df %>%",
        "+ ",
        "  group_by(job_title) %>%",
        "+ ",
        "  summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%",
        "+ ",
        "  arrange(desc(avg_salary))  # Sort by highest salary",
        "> ",
        "> ",
        "# Select top 10 highest-paying roles",
        "> ",
        "top_10_jobs <- avg_salary_by_job[1:10, ]",
        "> ",
        "> ",
        "# Plot improved bar chart",
        "> ",
        "ggplot(top_10_jobs, aes(x = reorder(job_title, avg_salary), y = avg_salary, fill = avg_salary)) +",
        "+ ",
        "  geom_bar(stat = \"identity\", show.legend = FALSE) +  # Hide legend (optional)",
        "+ ",
        "  ",
        "+ ",
        "  # Adding Data Labels",
        "+ ",
        "  geom_text(aes(label = scales::dollar(avg_salary, scale = 1e-3, suffix = \"K\")), ",
        "+ ",
        "            hjust = -0.2, size = 5, fontface = \"bold\") +",
        "+ ",
        "  ",
        "+ ",
        "  coord_flip() +  # Flip for better readability",
        "+ ",
        "  ",
        "+ ",
        "  # Format salary axis in 'K' (thousands)",
        "+ ",
        "  scale_y_continuous(labels = dollar_format(scale = 1e-3, suffix = \"K\")) +",
        "+ ",
        "  ",
        "+ ",
        "  # Titles & Labels",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Top 10 Highest Paying Data Science Roles\",",
        "+ ",
        "    subtitle = \"Based on Average Salary (USD) Across Job Titles\",",
        "+ ",
        "    x = \"Job Title\",",
        "+ ",
        "    y = \"Average Salary (USD)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\"",
        "+ ",
        "  ) +",
        "+ ",
        "  ",
        "+ ",
        "  # Theme & Text Formatting",
        "+ ",
        "  theme_minimal(base_size = 14) +  ",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\"),",
        "+ ",
        "    axis.text = element_text(size = 12)",
        "+ ",
        "  ) +",
        "+ ",
        "  ",
        "+ ",
        "  # Custom Gradient Fill",
        "+ ",
        "  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\")",
        "> ",
        "> ",
        "df <- df %>%",
        "+ ",
        "  mutate(start_date = as.Date(paste0(work_year, \"-01-01\")))",
        "> ",
        "> ",
        "# Aggregate Data: Count job postings and calculate average salary per year",
        "> ",
        "jobs_salaries_per_year <- df %>%",
        "+ ",
        "  group_by(start_date) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    job_count = n(),  ",
        "+ ",
        "    avg_salary = mean(salary_in_usd, na.rm = TRUE)",
        "+ ",
        "  )",
        "> ",
        "> ",
        "# Plot Line Graph",
        "> ",
        "ggplot(jobs_salaries_per_year, aes(x = start_date)) +",
        "+ ",
        "  ",
        "+ ",
        "  # Job count line with markers",
        "+ ",
        "  geom_line(aes(y = job_count, color = \"Job Count\"), size = 1.5, linetype = \"solid\") +",
        "+ ",
        "  geom_point(aes(y = job_count, color = \"Job Count\"), size = 4, shape = 16) +",
        "+ ",
        "  ",
        "+ ",
        "  # Average salary line with markers",
        "+ ",
        "  geom_line(aes(y = avg_salary / 500, color = \"Avg Salary (Scaled)\"), size = 1.5, linetype = \"dashed\") +",
        "+ ",
        "  geom_point(aes(y = avg_salary / 500, color = \"Avg Salary (Scaled)\"), size = 4, shape = 17) +",
        "+ ",
        "  ",
        "+ ",
        "  # Titles & Labels",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Trends in Data Science Job Postings & Salaries Over Time\",",
        "+ ",
        "    subtitle = \"Job Openings vs. Average Salary (Scaled) Per Year\",",
        "+ ",
        "    x = \"Year\",",
        "+ ",
        "    y = \"Count / Salary (Scaled)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\",",
        "+ ",
        "    color = \"Metrics\"",
        "+ ",
        "  ) +",
        "+ ",
        "  ",
        "+ ",
        "  # Customizing Theme",
        "+ ",
        "  theme_minimal(base_size = 16) +  ",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 20),",
        "+ ",
        "    plot.subtitle = element_text(size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\"),",
        "+ ",
        "    axis.text = element_text(size = 12),",
        "+ ",
        "    legend.position = c(0.15, 0.85),  # Move legend inside plot",
        "+ ",
        "    legend.background = element_rect(fill = \"white\", color = \"black\")",
        "+ ",
        "  ) +",
        "+ ",
        "  ",
        "+ ",
        "  # Add Vertical Line at 2020 (Example)  ",
        "+ ",
        "  geom_vline(xintercept = as.Date(\"2020-01-01\"), linetype = \"dashed\", color = \"gray\") +",
        "+ ",
        "  ",
        "+ ",
        "  # Add Horizontal Line at 0 (Just in Case)",
        "+ ",
        "  geom_hline(yintercept = 0, linetype = \"solid\", color = \"black\")",
        "> ",
        "> ",
        "# Categorize jobs as Remote or On-Site",
        "> ",
        "df$work_type <- ifelse(df$remote_ratio > 50, \"Remote\", \"On-Site\")",
        "> ",
        "> ",
        "# Create the histogram",
        "> ",
        "ggplot(df, aes(x = salary_in_usd, fill = work_type)) +",
        "+ ",
        "  geom_histogram(alpha = 0.6, position = \"identity\", bins = 30) +  ",
        "+ ",
        "  geom_density(aes(y = ..count.. * 20), alpha = 0.3) +  ",
        "+ ",
        "  scale_fill_manual(values = c(\"Remote\" = \"darkblue\", \"On-Site\" = \"skyblue\")) +  ",
        "+ ",
        "  scale_x_continuous(labels = dollar_format()) +  ",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Salary Distribution: Remote vs. On-Site Data Science Jobs\",",
        "+ ",
        "    subtitle = \"Does Remote Work Pay More?\",",
        "+ ",
        "    x = \"Salary (USD)\",",
        "+ ",
        "    y = \"Count\",",
        "+ ",
        "    fill = \"Work Type\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal(base_size = 14) +  ",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\"),",
        "+ ",
        "    axis.text = element_text(size = 12),",
        "+ ",
        "    legend.position = \"top\"",
        "+ ",
        "  ) ",
        "> ",
        "> ",
        "employment_labels <- c(\"FT\" = \"Full-Time\", \"CT\" = \"Contract\", ",
        "+ ",
        "                       \"FL\" = \"Freelance\", \"PT\" = \"Part-Time\")",
        "> ",
        "> ",
        "ggplot(df, aes(x = employment_type, y = salary_in_usd, fill = employment_type)) +",
        "+ ",
        "  geom_boxplot(alpha = 0.7, outlier.shape = 21, outlier.color = \"red\", outlier.fill = \"red\") +  ",
        "+ ",
        "  stat_summary(fun = mean, geom = \"point\", shape = 8, size = 3, color = \"black\") +  ",
        "+ ",
        "  scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Salary Distribution by Employment Type\",",
        "+ ",
        "    subtitle = \"Which Employment Type Has the Most Stable Income?\",",
        "+ ",
        "    x = \"Employment Type\",",
        "+ ",
        "    y = \"Salary (USD)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\",",
        "+ ",
        "    fill = \"Employment Type\"  # Legend Title",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_x_discrete(labels = employment_labels) +  # Replace short forms with full forms on x-axis",
        "+ ",
        "  theme_minimal(base_size = 14) +  ",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14),",
        "+ ",
        "    axis.title = element_text(face = \"bold\"),",
        "+ ",
        "    axis.text = element_text(size = 12),",
        "+ ",
        "    legend.position = c(0.85, 0.85),  # Moves legend to top right",
        "+ ",
        "    legend.background = element_rect(fill = \"white\", color = \"black\", linewidth = 0.5), # Add border to legend",
        "+ ",
        "    legend.key = element_rect(fill = \"white\")",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_manual(",
        "+ ",
        "    values = c(\"FL\" = \"#E69F00\", \"CT\" = \"#56B4E9\", ",
        "+ ",
        "               \"PT\" = \"#009E73\", \"FT\" = \"#D55E00\"),",
        "+ ",
        "    labels = employment_labels  # Apply custom legend labels",
        "+ ",
        "  )  ",
        "> ",
        "> ",
        "# Load world map data",
        "> ",
        "world <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")",
        "> ",
        "> ",
        "salary_by_country <- df %>%",
        "+ ",
        "  group_by(company_location) %>%",
        "+ ",
        "  summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%",
        "+ ",
        "  rename(country = company_location)",
        "> ",
        "> ",
        "world <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")",
        "> ",
        "> ",
        "# Aggregate salary data by country",
        "> ",
        "salary_by_country <- df %>%",
        "+ ",
        "  group_by(company_location) %>%",
        "+ ",
        "  summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%",
        "+ ",
        "  rename(country = company_location)",
        "> ",
        "> ",
        "# Convert country geometry to centroids",
        "> ",
        "world <- world %>%",
        "+ ",
        "  mutate(centroid = st_centroid(geometry)) %>%",
        "+ ",
        "  mutate(longitude = st_coordinates(centroid)[,1],",
        "+ ",
        "         latitude = st_coordinates(centroid)[,2])",
        "> ",
        "> ",
        "# Merge salary data with country map data",
        "> ",
        "map_data <- world %>%",
        "+ ",
        "  left_join(salary_by_country, by = c(\"iso_a2\" = \"country\"))",
        "> ",
        "> ",
        "# Remove missing values",
        "> ",
        "map_data <- map_data %>%",
        "+ ",
        "  filter(!is.na(longitude) & !is.na(latitude) & !is.na(avg_salary))",
        "> ",
        "> ",
        "# Plot",
        "> ",
        "ggplot(data = world) +",
        "+ ",
        "  geom_sf(fill = \"gray85\", color = \"white\") +  ",
        "+ ",
        "  geom_point(data = map_data, aes(x = longitude, y = latitude, ",
        "+ ",
        "                                  size = avg_salary, color = avg_salary), ",
        "+ ",
        "             alpha = 0.5) +  ",
        "+ ",
        "  scale_size_continuous(range = c(3, 15), labels = scales::dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  scale_color_viridis_c(option = \"plasma\", direction = -1, labels = scales::dollar_format(scale = 1e-3, suffix = \"K\")) +  ",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"💰 Data Science Salaries Around the World\",",
        "+ ",
        "    subtitle = \"Bubble Size = Average Salary | Color = Salary Level\",",
        "+ ",
        "    color = \"Avg Salary (USD)\",",
        "+ ",
        "    size = \"Salary (USD)\",",
        "+ ",
        "    caption = \"Source: ds_salaries.csv\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(face = \"bold\", size = 18),",
        "+ ",
        "    plot.subtitle = element_text(size = 14, margin = margin(b = 10)),",
        "+ ",
        "    legend.position = \"bottom\"",
        "+ ",
        "  )",
        "\nRestarting R session...\n\n",
        "trying URL 'http://cran.us.r-project.org/bin/macosx/big-sur-arm64/contrib/4.4/rnaturalearthdata_1.0.0.tgz'\nContent type 'application/x-gzip' length 3334923 bytes (3.2 MB)\n==================================================\ndownloaded 3.2 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/rr/1my9dxj92ql5lbtcf0nwfz6r0000gn/T//RtmpsAr3Cr/downloaded_packages\n\nRestarting R session...\n\n"
    ]
}
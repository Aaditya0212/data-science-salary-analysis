scale_fill_manual(values = c("North America" = "#4C72B0", "Europe" = "#55A868", "Asia" = "#C44E52", "Oceania" = "#8172B3", "Other (South America, Africa, etc.)" = "#6D6D6D"))
# 1. Salary by Region (Bar Chart)
df$region <- recode(df$company_location,
"US" = "North America", "CA" = "North America", "MX" = "North America",
"GB" = "Europe", "DE" = "Europe", "FR" = "Europe", "ES" = "Europe", "IT" = "Europe",
"IN" = "Asia", "CN" = "Asia", "JP" = "Asia", "SG" = "Asia",
"AU" = "Oceania", "NZ" = "Oceania",
.default = "Other (South America, Africa, etc.)")
avg_salary_by_region <- df %>%
group_by(region) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary))
# Improved Bar Chart Layout (Descending Order & Cleaner Look)
ggplot(avg_salary_by_region, aes(x = reorder(region, avg_salary), y = avg_salary, fill = region)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 0.6) +  # Adjust bar width
geom_text(aes(label = scales::dollar(avg_salary, scale = 1e-3, suffix = "K", accuracy = 1)),
hjust = -0.2, size = 5, fontface = "bold", color = "black") +  # Place text outside bars
coord_flip() +  # Keep it flipped for readability
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1),
expand = expansion(mult = c(0, 0.15))) +  # Reduce white space
labs(
title = "**Average Data Science Salaries by Region**",
subtitle = "**Where in the world are the highest paying jobs?**",
x = "Region", y = "Average Salary (USD)",
caption = "Regions: NA = US, CA, MX | EU = GB, DE, FR, ES, IT | Asia = IN, CN, JP, SG | Oceania = AU, NZ | Other = South America, Africa, etc."
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
plot.margin = margin(10, 50, 10, 10)  # Adjust margins to prevent crowding
) +
scale_fill_manual(values = c("North America" = "#4C72B0", "Europe" = "#55A868", "Asia" = "#C44E52", "Oceania" = "#8172B3", "Other (South America, Africa, etc.)" = "#937860"))
# Final Bar Chart with Formatting Improvements
ggplot(avg_salary_by_region, aes(x = reorder(region, avg_salary), y = avg_salary, fill = region)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 0.6) +  # Adjust bar width
geom_text(aes(label = scales::dollar(avg_salary, scale = 1e-3, suffix = "K", accuracy = 1)),
hjust = -0.2, size = 5, fontface = "bold", color = "black") +  # Place text outside bars
coord_flip() +  # Keep it flipped for readability
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1),
expand = expansion(mult = c(0, 0.15))) +  # Reduce white space
labs(
title = "**Average Data Science Salaries by Region**",
subtitle = "**Where in the world are the highest paying jobs?**",
x = "Region", y = "Average Salary (USD)",
caption = "Regions:\nNA = US, CA, MX \nEU = GB, DE, FR, ES, IT \nAsia = IN, CN, JP, SG \nOceania = AU, NZ \nOther = South America, Africa, etc."
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
plot.margin = margin(10, 50, 10, 10)  # Adjust margins to prevent crowding
) +
scale_fill_manual(values = c("North America" = "#4C72B0", "Europe" = "#55A868", "Asia" = "#C44E52", "Oceania" = "#8172B3", "Other (South America, Africa, etc.)" = "#6D6D6D"))
# Final Bar Chart with Formatting Improvements
ggplot(avg_salary_by_region, aes(x = reorder(region, avg_salary), y = avg_salary, fill = region)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 0.6) +  # Adjust bar width
geom_text(aes(label = scales::dollar(avg_salary, scale = 1e-3, suffix = "K", accuracy = 1)),
hjust = -0.2, size = 5, fontface = "bold", color = "black") +  # Place text outside bars
coord_flip() +  # Keep it flipped for readability
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1),
expand = expansion(mult = c(0, 0.15))) +  # Reduce white space
labs(
title = "**Average Data Science Salaries by Region**",
subtitle = "**Where in the world are the highest paying jobs?**",
x = "Region", y = "Average Salary (USD)",
caption = "Regions:\nNA = US, CA, MX \nEU = GB, DE, FR, ES, IT \nAsia = IN, CN, JP, SG \nOceania = AU, NZ \nOther = South America, Africa, etc."
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
plot.margin = margin(10, 50, 10, 10)  # Adjust margins to prevent crowding
) +
scale_fill_manual(values = c("North America" = "#4C72B0", "Europe" = "#55A868", "Asia" = "#C44E52", "Oceania" = "#8172B3", "Other (South America, Africa, etc.)" = "#6D6D6D"))
# 1. Salary by Region (Bar Chart)
# 1. Salary by Region (Bar Chart)
df$region <- recode(df$company_location,
"US" = "North America", "CA" = "North America", "MX" = "North America",
"GB" = "Europe", "DE" = "Europe", "FR" = "Europe", "ES" = "Europe", "IT" = "Europe",
"IN" = "Asia", "CN" = "Asia", "JP" = "Asia", "SG" = "Asia",
"AU" = "Oceania", "NZ" = "Oceania",
.default = "Other (South America, Africa, etc.)")
avg_salary_by_region <- df %>%
group_by(region) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary))
# Improved Bar Chart Layout (Descending Order & Cleaner Look)
ggplot(avg_salary_by_region, aes(x = reorder(region, avg_salary), y = avg_salary, fill = region)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 0.6) +  # Adjust bar width
geom_text(aes(label = scales::dollar(avg_salary, scale = 1e-3, suffix = "K", accuracy = 1)),
hjust = -0.2, size = 5, fontface = "bold", color = "black") +  # Place text outside bars
coord_flip() +  # Keep it flipped for readability
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1),
expand = expansion(mult = c(0, 0.15))) +  # Reduce white space
labs(
title = "**Average Data Science Salaries by Region**",
subtitle = "**Where in the world are the highest paying jobs?**",
x = "Region", y = "Average Salary (USD)",
caption = "Regions: NA = US, CA, MX | EU = GB, DE, FR, ES, IT | Asia = IN, CN, JP, SG | Oceania = AU, NZ | Other = South America, Africa, etc."
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
plot.margin = margin(10, 50, 10, 10)  # Adjust margins to prevent crowding
) +
scale_fill_manual(values = c("North America" = "#4C72B0", "Europe" = "#55A868", "Asia" = "#C44E52", "Oceania" = "#8172B3", "Other (South America, Africa, etc.)" = "#937860"))
# 1. Salary by Region (Bar Chart)
# Categorize countries into regions
df$region <- recode(df$company_location,
"US" = "North America", "CA" = "North America", "MX" = "North America",
"GB" = "Europe", "DE" = "Europe", "FR" = "Europe", "ES" = "Europe", "IT" = "Europe",
"IN" = "Asia", "CN" = "Asia", "JP" = "Asia", "SG" = "Asia",
"AU" = "Oceania", "NZ" = "Oceania",
.default = "Other")
# Compute average salary by region
avg_salary_by_region <- df %>%
group_by(region) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary))
# Create the bar chart
ggplot(avg_salary_by_region, aes(x = reorder(region, avg_salary), y = avg_salary, fill = region)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 0.7) +
geom_text(aes(label = paste0("$", round(avg_salary / 1000), "K")),
hjust = -0.1, size = 5, fontface = "bold") +
coord_flip() +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1),
expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Average Data Science Salaries by Region",
subtitle = "Where in the world are the highest paying jobs?",
x = "Region", y = "Average Salary (USD)",
caption = "Regions: NA = US, CA, MX | EU = GB, DE, FR, ES, IT | Asia = IN, CN, JP, SG | Oceania = AU, NZ | Other = South America, Africa, etc."
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(10, 50, 10, 10)
) +
scale_fill_manual(values = c("North America" = "#4C72B0", "Europe" = "#55A868", "Asia" = "#C44E52", "Oceania" = "#8172B3", "Other" = "#6D6D6D"))
# Identify the top 5 highest-paying job titles
top_jobs <- df %>%
group_by(job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary)) %>%
slice(1:5) %>%
pull(job_title)
# Filter dataset for only the top 5 job titles
df_top_jobs <- df %>% filter(job_title %in% top_jobs)
# Compute average salary for each job title per year
salary_trends <- df_top_jobs %>%
group_by(work_year, job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE), .groups = "drop")
# Create the multi-line chart
ggplot(salary_trends, aes(x = work_year, y = avg_salary, color = job_title, group = job_title)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
geom_text(data = salary_trends %>% filter(work_year == max(work_year)),
aes(label = paste0("$", round(avg_salary / 1000), "K")),
hjust = -0.2, size = 5, fontface = "bold") +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1)) +
labs(title = "Salary Growth by Job Title Over Time",
subtitle = "Tracking how salaries have evolved for top-paying roles",
x = "Year", y = "Average Salary (USD)", color = "Job Title") +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = "bottom"
)
# Identify the top 5 highest-paying job titles
top_jobs <- df %>%
group_by(job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary)) %>%
slice(1:5) %>%
pull(job_title)
# Filter dataset for only the top 5 job titles
df_top_jobs <- df %>% filter(job_title %in% top_jobs)
# Compute average salary for each job title per year
salary_trends <- df_top_jobs %>%
group_by(work_year, job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE), .groups = "drop")
# Create the improved multi-line chart
ggplot(salary_trends, aes(x = work_year, y = avg_salary, color = job_title, group = job_title)) +
geom_line(size = 1.5) +  # Increase line thickness for better visibility
geom_point(size = 3) +  # Make points larger for emphasis
geom_text(data = salary_trends %>% filter(work_year == max(work_year)),
aes(label = paste0("$", round(avg_salary / 1000), "K")),
hjust = -0.2, size = 5, fontface = "bold") +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1)) +
scale_x_continuous(breaks = unique(salary_trends$work_year)) +  # Ensure correct year breaks
labs(title = "Salary Growth by Job Title Over Time",
subtitle = "Tracking how salaries have evolved for top-paying roles",
x = "Year", y = "Average Salary (USD)", color = "Job Title") +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = "bottom"
)
# Identify the top 5 highest-paying job titles
top_jobs <- df %>%
group_by(job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary)) %>%
slice(1:5) %>%
pull(job_title)
# Filter dataset for only the top 5 job titles
df_top_jobs <- df %>% filter(job_title %in% top_jobs)
# Compute average salary for each job title per year
salary_trends <- df_top_jobs %>%
group_by(work_year, job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE), .groups = "drop")
# Create the improved multi-line chart
ggplot(salary_trends, aes(x = work_year, y = avg_salary, color = job_title, group = job_title)) +
geom_line(size = 1.5) +  # Increase line thickness for better visibility
geom_point(size = 3) +  # Make points larger for emphasis
geom_text(data = salary_trends %>% filter(work_year == max(work_year)),
aes(label = paste0("$", round(avg_salary / 1000), "K")),
hjust = -0.2, size = 5, fontface = "bold") +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1)) +
scale_x_continuous(breaks = unique(salary_trends$work_year)) +  # Ensure correct year breaks
labs(title = "Salary Growth by Job Title Over Time",
subtitle = "Tracking how salaries have evolved for top-paying roles",
x = "Year", y = "Average Salary (USD)", color = "Job Title") +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = "bottom"
)
# Identify the top 5 highest-paying job titles
top_jobs <- df %>%
group_by(job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary)) %>%
slice(1:5) %>%
pull(job_title)
# Filter dataset for only the top 5 job titles
df_top_jobs <- df %>% filter(job_title %in% top_jobs)
# Compute average salary for each job title per year
salary_trends <- df_top_jobs %>%
group_by(work_year, job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE), .groups = "drop")
# Create the improved multi-line chart
ggplot(salary_trends, aes(x = work_year, y = avg_salary, color = job_title, group = job_title)) +
geom_line(size = 2) +  # Increased line thickness
geom_point(size = 4) +  # Make points larger for emphasis
geom_text(data = salary_trends %>% filter(work_year == max(work_year)),
aes(label = paste0("$", round(avg_salary / 1000), "K")),
hjust = -0.2, size = 6, fontface = "bold") +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1)) +
scale_x_continuous(breaks = unique(salary_trends$work_year)) +  # Ensure correct year breaks
labs(title = "Salary Growth by Job Title Over Time",
subtitle = "Tracking how salaries have evolved for top-paying roles",
x = "Year", y = "Average Salary (USD)", color = "Job Title") +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = "top"  # Move legend to top for better visibility
)
library(ggplot2)
library(dplyr)
library(scales)
library(sf)
library(viridis)
library(rnaturalearth)
library(rnaturalearthdata)
library(countrycode)
library(stringr)  # Added to fix str_wrap error
# Load dataset
df <- read.csv("ds_salaries.csv")
# 1. Improved Bar Chart: Top 10 Highest Paying Data Science Roles
avg_salary_by_job <- df %>%
group_by(job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary))
top_10_jobs <- avg_salary_by_job[1:10,]
ggplot(top_10_jobs, aes(x = reorder(job_title, avg_salary), y = avg_salary, fill = avg_salary)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 0.97) +  # Adjust width to reduce white space
geom_text(aes(label = scales::dollar(avg_salary, accuracy = 1, scale = 1e-3, suffix = "K")),
hjust = -0.1, size = 5, fontface = "bold") +  # Ensure number visibility
coord_flip() +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1),
expand = expansion(mult = c(0, 0.15))) +  # Reduce white space
labs(
title = "Top 10 Highest Paying Data Science Roles",
subtitle = "Surprisingly, Principal roles earn more than Directors/Managers",
x = "", y = "Average Salary (USD)",
caption = "Source: Kaggle.com"
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 11),
plot.margin = margin(10, 30, 10, 10),  # Reduce right-side white space
panel.grid.major = element_blank(),  # Turn off major grid lines
panel.grid.minor = element_blank()   # Turn off minor grid lines
) +
scale_fill_gradient(low = "lightblue", high = "darkblue")
# 2. Improved Line Chart: Salary Trends Over Time
avg_salary_by_year <- df %>%
group_by(work_year) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE))
ggplot(avg_salary_by_year, aes(x = work_year, y = avg_salary)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
theme_minimal(base_size = 16) +
labs(
title = "Trends in Data Science Salaries Over Time",
subtitle = "Salaries have shown a consistent upward trend",
x = "Year", y = "Average Salary (USD)"
) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 11)
) +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1))
# 3. Improved Histogram: Remote vs On-Site Salaries
df$work_type <- ifelse(df$remote_ratio > 50, "Remote", "On-Site")
med_remote <- median(df$salary_in_usd[df$work_type == "Remote"], na.rm = TRUE)
med_onsite <- median(df$salary_in_usd[df$work_type == "On-Site"], na.rm = TRUE)
ggplot(df, aes(x = salary_in_usd, fill = work_type)) +
geom_histogram(alpha = 0.6, position = "identity", bins = 40) +
geom_density(aes(y = ..density.. * max(..count..)), alpha = 0.3) +
geom_vline(xintercept = med_remote, color = "darkblue", linetype = "dashed", size = 1) +
geom_vline(xintercept = med_onsite, color = "skyblue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("Remote" = "darkblue", "On-Site" = "skyblue")) +
scale_x_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1)) +
labs(
title = "Salary Distribution: Remote vs. On-Site Data Science Jobs",
subtitle = "Does Remote Work Pay More? (Dashed Lines = Median Salary)",
x = "Salary (USD)",
y = "Count",
fill = "Work Type",
caption = "Source: Kaggle.com"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = c(0.85, 0.85)  # Move legend to the top-right as requested
)
# 4. Improved Boxplot: Salary Distribution by Employment Type
# Convert employment type abbreviations to full names
df$employment_type <- recode(df$employment_type,
"FT" = "Full-Time",
"PT" = "Part-Time",
"CT" = "Contract",
"FL" = "Freelance")
# Order employment types by median salary
median_salaries <- df %>%
group_by(employment_type) %>%
summarise(median_salary = median(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(median_salary))
df$employment_type <- factor(df$employment_type, levels = median_salaries$employment_type)
ggplot(df, aes(x = employment_type, y = salary_in_usd, fill = employment_type)) +
geom_boxplot(outlier.shape = 21, outlier.size = 2, outlier.color = "black", outlier.fill = "white") +
theme_minimal(base_size = 16) +
labs(
title = "Salary Distribution by Employment Type",
subtitle = "Which Employment Type Has the Most Stable Income?",
x = "Employment Type", y = "Salary (USD)"
) +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1)) +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 11)
)
# 5. Improved Map: Global Salaries with a Choropleth
world <- ne_countries(scale = "medium", returnclass = "sf")
df$country_code <- countrycode(df$company_location, "iso2c", "iso3c")
salary_by_country <- df %>%
group_by(country_code) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE))
world_map <- left_join(world, salary_by_country, by = c("iso_a3" = "country_code"))
ggplot(world_map) +
geom_sf(aes(fill = avg_salary), color = "white") +
scale_fill_viridis(option = "magma", direction = -1, na.value = "grey80") +
theme_minimal() +
labs(title = "Global Data Science Salaries",
subtitle = "A Choropleth map for better readability",
fill = "Avg Salary (USD)")
library(ggplot2)
library(dplyr)
library(scales)
library(stringr)
# Load dataset
df <- read.csv("ds_salaries.csv")
# 1. Salary by Region (Bar Chart)
df$region <- recode(df$company_location,
"US" = "North America", "CA" = "North America", "MX" = "North America",
"GB" = "Europe", "DE" = "Europe", "FR" = "Europe", "ES" = "Europe", "IT" = "Europe",
"IN" = "Asia", "CN" = "Asia", "JP" = "Asia", "SG" = "Asia",
"AU" = "Oceania", "NZ" = "Oceania",
.default = "Other (South America, Africa, etc.)")
avg_salary_by_region <- df %>%
group_by(region) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary))
# 1. Salary by Region (Bar Chart)
# Categorize countries into regions
df$region <- recode(df$company_location,
"US" = "North America", "CA" = "North America", "MX" = "North America",
"GB" = "Europe", "DE" = "Europe", "FR" = "Europe", "ES" = "Europe", "IT" = "Europe",
"IN" = "Asia", "CN" = "Asia", "JP" = "Asia", "SG" = "Asia",
"AU" = "Oceania", "NZ" = "Oceania",
.default = "Other")
# Compute average salary by region
avg_salary_by_region <- df %>%
group_by(region) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary))
# Create the bar chart
ggplot(avg_salary_by_region, aes(x = reorder(region, avg_salary), y = avg_salary, fill = region)) +
geom_bar(stat = "identity", show.legend = FALSE, width = 0.7) +
geom_text(aes(label = paste0("$", round(avg_salary / 1000), "K")),
hjust = -0.1, size = 5, fontface = "bold") +
coord_flip() +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1),
expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Average Data Science Salaries by Region",
subtitle = "Where in the world are the highest paying jobs?",
x = "Region", y = "Average Salary (USD)",
caption = "Regions: NA = US, CA, MX | EU = GB, DE, FR, ES, IT | Asia = IN, CN, JP, SG | Oceania = AU, NZ | Other = South America, Africa, etc."
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(10, 50, 10, 10)
) +
scale_fill_manual(values = c("North America" = "#4C72B0", "Europe" = "#55A868", "Asia" = "#C44E52", "Oceania" = "#8172B3", "Other" = "#6D6D6D"))
# Identify the top 5 highest-paying job titles
top_jobs <- df %>%
group_by(job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE)) %>%
arrange(desc(avg_salary)) %>%
slice(1:5) %>%
pull(job_title)
# Filter dataset for only the top 5 job titles
df_top_jobs <- df %>% filter(job_title %in% top_jobs)
# Compute average salary for each job title per year
salary_trends <- df_top_jobs %>%
group_by(work_year, job_title) %>%
summarise(avg_salary = mean(salary_in_usd, na.rm = TRUE), .groups = "drop")
# Create the improved multi-line chart
ggplot(salary_trends, aes(x = work_year, y = avg_salary, color = job_title, group = job_title)) +
geom_line(size = 2) +  # Increased line thickness
geom_point(size = 4) +  # Make points larger for emphasis
geom_text(data = salary_trends %>% filter(work_year == max(work_year)),
aes(label = paste0("$", round(avg_salary / 1000), "K")),
hjust = -0.2, size = 6, fontface = "bold") +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-3, suffix = "K", accuracy = 1)) +
scale_x_continuous(breaks = unique(salary_trends$work_year)) +  # Ensure correct year breaks
labs(title = "Salary Growth by Job Title Over Time",
subtitle = "Tracking how salaries have evolved for top-paying roles",
x = "Year", y = "Average Salary (USD)", color = "Job Title") +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = "top"  # Move legend to top for better visibility
)
